{"version":3,"sources":["webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///./src/components/complaint/Form.vue","webpack:///src/components/complaint/Form.vue","webpack:///./src/components/complaint/Form.vue?b71a","webpack:///./src/components/complaint/Form.vue?2a00","webpack:///./src/components/Loading.vue","webpack:///src/components/Loading.vue","webpack:///./src/components/Loading.vue?3d4f","webpack:///./src/components/Loading.vue?58db","webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/components/VGrid/VCol.ts"],"names":["defaultMenuProps","VSelectMenuProps","offsetY","offsetOverflow","transition","VSelect","extend","name","props","allowOverflow","type","Boolean","default","autoSelectFirst","filter","Function","item","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","options","noFilter","searchInput","String","data","lazySearch","this","computed","classes","call","selectedIndex","computedItems","filteredItems","selectedValues","selectedItems","map","getValue","hasDisplayedItems","hideSelected","some","hasItem","length","currentRange","selectedItem","getText","isSearching","internalSearch","allItems","value","getPropertyFromItem","text","get","set","val","$emit","isAnyValueAllowed","isDirty","searchIsDirty","multiple","menuCanShow","isFocused","$_menuProps","contentClass","trim","find","i","valueComparator","internalValue","listData","items","virtualizedItems","watch","document","addEventListener","onCopy","$refs","input","select","removeEventListener","blur","updateSelf","isMenuActive","hasSlot","oldVal","activateMenu","created","setSearch","destroyed","methods","onFilteredItemsChanged","preSelectedItem","menu","listIndex","setMenuIndex","findIndex","$nextTick","getTiles","onInternalSearchChanged","updateMenuDimensions","updateDimensions","changeSelectedIndex","keyCode","keyCodes","left","right","backspace","delete","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","selectItem","setValue","clearableCallback","genInput","VTextField","mergeData","attrs","getObjectValueByPath","autocomplete","domProps","genInputSlot","slot","role","genSelections","onClick","e","onFocus","isAppendInner","target","onInput","badInput","validity","onKeyDown","ctrlKey","home","end","includes","onSpaceDown","onTabDown","onUpDown","preventDefault","setSelectedItems","event","currentItem","currentItemText","clipboardData","setData","VAutocomplete","delimiters","Array","returnObject","editingIndex","computedCounterValue","toString","$slots","delimiter","d","endsWith","slice","updateTags","on","paste","onPaste","genChipSelection","index","chip","componentOptions","listeners","dblclick","onChipInput","onEnterDown","getMenuIndex","selectionStart","enter","stopPropagation","updateEditing","undefined","Object","assign","splice","push","updateCombobox","isUsingSlot","$scopedSlots","selection","hasChips","menuIndex","itemToSelect","pastedItemText","_event$clipboardData","getData","findExistingIndex","_c","$event","_vm","$v","model","subject","$set","description","orderRepair","callback","$$v","expression","staticRenderFns","render","mixins","values","required","errors","initialValues","mounted","orderRepairSelectItems","subjectErrors","has","descriptionErrors","orderRepairErrors","violations","orderRepairGetSelectItems","validations","component","staticClass","visible","BindsAttrs","RegistrableProvide","provide","form","inheritAttrs","disabled","lazyValidation","readonly","inputs","watchers","errorBag","handler","deep","immediate","watchInput","watcher","$watch","_uid","valid","shouldValidate","hasOwnProperty","validate","reset","forEach","resetErrorBag","setTimeout","resetValidation","register","unregister","found","unwatch","$delete","h","novalidate","attrs$","submit","breakpoints","breakpointProps","reduce","Number","offsetProps","upperFirst","orderProps","propMap","col","keys","offset","order","breakpointClass","prop","className","breakpoint","replace","toLowerCase","cache","Map","Vue","functional","cols","alignSelf","validator","str","tag","children","parent","cacheKey","classList","hasColClasses","startsWith","class"],"mappings":"wMAmBA,MAAMA,EAAmB,IACpBC,OACHC,SAAS,EACTC,gBAAgB,EAChBC,YAAY,GAICC,aAAQC,OAAO,CAC5BC,KAAM,iBAENC,MAAO,CACLC,cAAe,CACbC,KAAMC,QACNC,SAAS,GAEXC,gBAAiB,CACfH,KAAMC,QACNC,SAAS,GAEXE,OAAQ,CACNJ,KAAMK,SACNH,QAAS,CAACI,EAAWC,EAAmBC,IAC/BA,EAASC,oBAAoBC,QAAQH,EAAUE,sBAAwB,GAGlFE,WAAYV,QACZW,UAAW,CACTZ,KAAML,OAAQkB,QAAQf,MAAMc,UAAUZ,KACtCE,QAAS,IAAMZ,GAEjBwB,SAAUb,QACVc,YAAa,CACXf,KAAMgB,SAIVC,OACE,MAAO,CACLC,WAAYC,KAAKJ,cAIrBK,SAAU,CACRC,UACE,MAAO,IACF1B,OAAQkB,QAAQO,SAASC,QAAQC,KAAKH,MACzC,kBAAkB,EAClB,qCAAsCA,KAAKI,eAAiB,IAGhEC,gBACE,OAAOL,KAAKM,eAEdC,iBACE,OAAOP,KAAKQ,cAAcC,IAAItB,GAAQa,KAAKU,SAASvB,KAEtDwB,oBACE,OAAOX,KAAKY,aACRZ,KAAKM,cAAcO,KAAK1B,IAASa,KAAKc,QAAQ3B,IAC9Ca,KAAKM,cAAcS,OAAS,GAElCC,eACE,OAAyB,MAArBhB,KAAKiB,aAA6B,EAE/BpB,OAAOG,KAAKkB,QAAQlB,KAAKiB,eAAeF,QAEjDT,gBACE,OAAKN,KAAKmB,aAAenB,KAAKL,UAAmC,MAAvBK,KAAKoB,eAA+BpB,KAAKqB,SAE5ErB,KAAKqB,SAASpC,OAAOE,IAC1B,MAAMmC,EAAQC,eAAoBpC,EAAMa,KAAKX,UACvCmC,EAAgB,MAATF,EAAgBzB,OAAOyB,GAAS,GAE7C,OAAOtB,KAAKf,OAAOE,EAAMU,OAAOG,KAAKoB,gBAAiBI,MAG1DJ,eAAgB,CACdK,MACE,OAAOzB,KAAKD,YAEd2B,IAAKC,GAGC3B,KAAKD,aAAe4B,IACtB3B,KAAKD,WAAa4B,EAClB3B,KAAK4B,MAAM,sBAAuBD,MAIxCE,oBACE,OAAO,GAETC,UACE,OAAO9B,KAAK+B,eAAiB/B,KAAKQ,cAAcO,OAAS,GAE3DI,cACE,OACEnB,KAAKgC,UACLhC,KAAK+B,eAEL/B,KAAK+B,eACL/B,KAAKoB,iBAAmBpB,KAAKkB,QAAQlB,KAAKiB,eAG9CgB,cACE,QAAKjC,KAAKkC,YAEHlC,KAAKW,oBAAsBX,KAAKR,aAEzC2C,cACE,MAAMxD,EAAQH,OAAQkB,QAAQO,SAASkC,YAAYhC,KAAKH,MAExD,OADCrB,EAAcyD,cAAe,4BAA4BzD,EAAcyD,cAAgB,KAAKC,OACtF,IACFlE,KACAQ,IAGPoD,gBACE,OAA8B,MAAvB/B,KAAKoB,gBACc,KAAxBpB,KAAKoB,gBAETH,eACE,OAAIjB,KAAKgC,SAAiB,KAEnBhC,KAAKQ,cAAc8B,KAAKC,GACtBvC,KAAKwC,gBAAgBxC,KAAKU,SAAS6B,GAAIvC,KAAKU,SAASV,KAAKyC,kBAGrEC,WACE,MAAM5C,EAAOtB,OAAQkB,QAAQO,SAASyC,SAASvC,KAAKH,MAapD,OAXAF,EAAKnB,MAAQ,IACRmB,EAAKnB,MACRgE,MAAO3C,KAAK4C,iBACZjD,SACEK,KAAKL,WACJK,KAAKmB,cACLnB,KAAKM,cAAcS,OAEtBnB,YAAaI,KAAKoB,gBAGbtB,IAIX+C,MAAO,CACLvC,cAAe,yBACfmC,cAAe,YACfP,UAAWP,GACLA,GACFmB,SAASC,iBAAiB,OAAQ/C,KAAKgD,QACvChD,KAAKiD,MAAMC,OAASlD,KAAKiD,MAAMC,MAAMC,WAErCL,SAASM,oBAAoB,OAAQpD,KAAKgD,QAC1ChD,KAAKqD,OACLrD,KAAKsD,eAGTC,aAAc5B,IACRA,GAAQ3B,KAAKwD,UAEjBxD,KAAKD,WAAa,OAEpB4C,MAAOhB,EAAK8B,GAONA,GAAUA,EAAO1C,SACnBf,KAAKR,aACLQ,KAAKkC,WACJlC,KAAKuD,eACN5B,EAAIZ,QACJf,KAAK0D,gBAET9D,YAAa+B,GACX3B,KAAKD,WAAa4B,GAEpBP,eAAgB,0BAChB/B,SAAU,cAGZsE,UACE3D,KAAK4D,aAGPC,YACEf,SAASM,oBAAoB,OAAQpD,KAAKgD,SAG5Cc,QAAS,CACPC,uBAAwBpC,EAAc8B,GAGpC,GAAI9B,IAAQ8B,EAAZ,CAEA,IAAKzD,KAAKhB,gBAAiB,CACzB,MAAMgF,EAAkBP,EAAOzD,KAAKiD,MAAMgB,KAAKC,WAE3CF,EACFhE,KAAKmE,aAAaxC,EAAIyC,UAAU7B,GAAKA,IAAMyB,IAE3ChE,KAAKmE,cAAc,GAErBnE,KAAK4B,MAAM,oBAAqB5B,KAAKiD,MAAMgB,KAAKC,WAGlDlE,KAAKqE,UAAU,KAEVrE,KAAKoB,iBACU,IAAfO,EAAIZ,QACFf,KAAKhB,mBAGVgB,KAAKiD,MAAMgB,KAAKK,WAEZtE,KAAKhB,iBAAmB2C,EAAIZ,SAC9Bf,KAAKmE,aAAa,GAClBnE,KAAK4B,MAAM,oBAAqB5B,KAAKiD,MAAMgB,KAAKC,iBAItDK,0BACEvE,KAAKwE,wBAEPA,uBAEExE,KAAKuD,cAAgBvD,KAAKiD,MAAMgB,MAAQjE,KAAKiD,MAAMgB,KAAKQ,oBAE1DC,oBAAqBC,GAGf3E,KAAK+B,gBAEL/B,KAAKgC,UAAY2C,IAAYC,OAASC,MACZ,IAAxB7E,KAAKI,cACPJ,KAAKI,cAAgBJ,KAAKQ,cAAcO,OAAS,EAEjDf,KAAKI,gBAEEJ,KAAKgC,UAAY2C,IAAYC,OAASE,MAC3C9E,KAAKI,eAAiBJ,KAAKQ,cAAcO,OAAS,EACpDf,KAAKI,eAAiB,EAEtBJ,KAAKI,gBAEEuE,IAAYC,OAASG,WAAaJ,IAAYC,OAASI,QAChEhF,KAAKiF,sBAGTA,oBACE,MAAMC,EAAWlF,KAAKI,cAChB+E,EAAUnF,KAAKQ,cAAc0E,GAGnC,IACGlF,KAAKoF,eACNpF,KAAKqF,YAAYF,GACjB,OAEF,MAAMG,EAAYtF,KAAKQ,cAAcO,OAAS,EAI9C,IAC0B,IAAxBf,KAAKI,eACS,IAAdkF,EAIA,YAFAtF,KAAKI,cAAgBkF,GAKvB,MAAMvE,EAASf,KAAKQ,cAAcO,OAC5BwE,EAAYL,IAAanE,EAAS,EACpCmE,EACAA,EAAW,EACTM,EAAWxF,KAAKQ,cAAc+E,GAE/BC,EAGHxF,KAAKyF,WAAWN,GAFhBnF,KAAK0F,SAAS1F,KAAKgC,SAAW,GAAK,MAKrChC,KAAKI,cAAgBmF,GAEvBI,oBACE3F,KAAKoB,eAAiB,KAEtB5C,OAAQkB,QAAQoE,QAAQ6B,kBAAkBxF,KAAKH,OAEjD4F,WACE,MAAM1C,EAAQ2C,OAAWnG,QAAQoE,QAAQ8B,SAASzF,KAAKH,MAUvD,OARAkD,EAAMpD,KAAOgG,eAAU5C,EAAMpD,KAAO,CAClCiG,MAAO,CACL,wBAAyBC,eAAqBhG,KAAKiD,MAAMgB,KAAM,iBAC/DgC,aAAcD,eAAqB9C,EAAMpD,KAAO,qBAAsB,QAExEoG,SAAU,CAAE5E,MAAOtB,KAAKoB,kBAGnB8B,GAETiD,eACE,MAAMC,EAAO5H,OAAQkB,QAAQoE,QAAQqC,aAAahG,KAAKH,MAIvD,OAFAoG,EAAKtG,KAAMiG,MAAOM,KAAO,WAElBD,GAETE,gBACE,OAAOtG,KAAKwD,SAAWxD,KAAKgC,SACxBxD,OAAQkB,QAAQoE,QAAQwC,cAAcnG,KAAKH,MAC3C,IAENuG,QAASC,GACFxG,KAAKoF,gBAEVpF,KAAKI,eAAiB,EACjBJ,KAAKI,eAAiB,EACvBJ,KAAKyG,UAEJzG,KAAK0G,cAAcF,EAAEG,SAAS3G,KAAK0D,iBAE1CkD,QAASJ,GACP,GACExG,KAAKI,eAAiB,IACrBoG,EAAEG,OACH,OAEF,MAAMA,EAASH,EAAEG,OACXrF,EAAQqF,EAAOrF,MAGjBqF,EAAOrF,OAAOtB,KAAK0D,eAElB1D,KAAKgC,UAAsB,KAAVV,GAActB,KAAKiF,oBAEzCjF,KAAKoB,eAAiBE,EACtBtB,KAAK6G,SAAWF,EAAOG,UAAYH,EAAOG,SAASD,UAErDE,UAAWP,GACT,MAAM7B,EAAU6B,EAAE7B,SAGhB6B,EAAEQ,SACD,CAACpC,OAASqC,KAAMrC,OAASsC,KAAKC,SAASxC,IAExCnG,OAAQkB,QAAQoE,QAAQiD,UAAU5G,KAAKH,KAAMwG,GAO/CxG,KAAK0E,oBAAoBC,IAE3ByC,YAAaZ,KACba,UAAWb,GACThI,OAAQkB,QAAQoE,QAAQuD,UAAUlH,KAAKH,KAAMwG,GAC7CxG,KAAKsD,cAEPgE,SAAUd,GAERA,EAAEe,iBAKFvH,KAAK0D,gBAEP+B,WAAYtG,GACVX,OAAQkB,QAAQoE,QAAQ2B,WAAWtF,KAAKH,KAAMb,GAC9Ca,KAAK4D,aAEP4D,mBACEhJ,OAAQkB,QAAQoE,QAAQ0D,iBAAiBrH,KAAKH,MAIzCA,KAAKkC,WAAWlC,KAAK4D,aAE5BA,YAGE5D,KAAKqE,UAAU,KAEVrE,KAAKgC,UACLhC,KAAKoB,gBACLpB,KAAKuD,eAENvD,KAAKoB,gBACFpB,KAAKQ,cAAcO,QACpBf,KAAKgC,UACLhC,KAAKwD,QAEH,KACAxD,KAAKkB,QAAQlB,KAAKiB,kBAI5BqC,cAEKtD,KAAK+B,eACL/B,KAAKyC,iBAILzC,KAAKgC,UACLhC,KAAKwC,gBACJxC,KAAKoB,eACLpB,KAAKU,SAASV,KAAKyC,iBAGrBzC,KAAK4D,cAGT9C,QAAS3B,GACP,OAAOa,KAAKO,eAAehB,QAAQS,KAAKU,SAASvB,KAAU,GAE7D6D,OAAQyE,GAAqB,QAC3B,IAA4B,IAAxBzH,KAAKI,cAAsB,OAE/B,MAAMsH,EAAc1H,KAAKQ,cAAcR,KAAKI,eACtCuH,EAAkB3H,KAAKkB,QAAQwG,GACrC,SAAAD,EAAMG,gBAAN,EAAqBC,QAAQ,aAAcF,GAC3C,SAAAF,EAAMG,gBAAN,EAAqBC,QAAQ,2CAA4CF,GACzEF,EAAMF,qBCtbGO,IAAcrJ,OAAO,CAClCC,KAAM,aAENC,MAAO,CACLoJ,WAAY,CACVlJ,KAAMmJ,MACNjJ,QAAS,IAAO,IAElBkJ,aAAc,CACZpJ,KAAMC,QACNC,SAAS,IAIbe,KAAM,KAAM,CACVoI,cAAe,IAGjBjI,SAAU,CACRkI,uBACE,OAAOnI,KAAKgC,SACRhC,KAAKQ,cAAcO,QAClBf,KAAKoB,gBAAkB,IAAIgH,WAAWrH,QAE7CyC,UACE,OAAOhF,OAAQkB,QAAQO,SAASuD,QAAQrD,KAAKH,OAASA,KAAKgC,UAE7DH,oBACE,OAAO,GAETI,cACE,QAAKjC,KAAKkC,YAEHlC,KAAKW,qBACPX,KAAKqI,OAAO,aAAerI,KAAKR,aAEvCuC,gBACE,OAA8B,MAAvB/B,KAAKoB,iBAIhB0C,QAAS,CACPS,wBAAyB5C,GACvB,GACEA,GACA3B,KAAKgC,UACLhC,KAAK+H,WAAWhH,OAChB,CACA,MAAMuH,EAAYtI,KAAK+H,WAAWzF,KAAKiG,GAAK5G,EAAI6G,SAASD,IACxC,MAAbD,IACFtI,KAAKoB,eAAiBO,EAAI8G,MAAM,EAAG9G,EAAIZ,OAASuH,EAAUvH,QAC1Df,KAAK0I,cAIT1I,KAAKwE,wBAEPoB,WACE,MAAM1C,EAAQ4E,EAAcpI,QAAQoE,QAAQ8B,SAASzF,KAAKH,MAK1D,cAHOkD,EAAMpD,KAAMiG,MAAOrH,KAC1BwE,EAAMpD,KAAM6I,GAAIC,MAAQ5I,KAAK6I,QAEtB3F,GAET4F,iBAAkB3J,EAAc4J,GAC9B,MAAMC,EAAOxK,OAAQkB,QAAQoE,QAAQgF,iBAAiB3I,KAAKH,KAAMb,EAAM4J,GAcvE,OAXI/I,KAAKgC,WACPgH,EAAKC,iBAAkBC,UAAa,IAC/BF,EAAKC,iBAAkBC,UAC1BC,SAAU,KACRnJ,KAAKkI,aAAea,EACpB/I,KAAKoB,eAAiBpB,KAAKkB,QAAQ/B,GACnCa,KAAKI,eAAiB,KAKrB4I,GAETI,YAAajK,GACXX,OAAQkB,QAAQoE,QAAQsF,YAAYjJ,KAAKH,KAAMb,GAE/Ca,KAAKkI,cAAgB,GAIvBmB,YAAa7C,GACXA,EAAEe,iBAEEvH,KAAKsJ,gBAAkB,GAE3BtJ,KAAKqE,UAAUrE,KAAKsD,aAEtByD,UAAWP,GACT,MAAM7B,EAAU6B,EAAE7B,SAGhB6B,EAAEQ,SACD,CAACpC,OAASqC,KAAMrC,OAASsC,KAAKC,SAASxC,IAExCnG,OAAQkB,QAAQoE,QAAQiD,UAAU5G,KAAKH,KAAMwG,GAK3CxG,KAAKgC,UACP2C,IAAYC,OAASC,MACe,IAApC7E,KAAKiD,MAAMC,MAAMqG,eAEjBvJ,KAAKsD,aACIqB,IAAYC,OAAS4E,OAC9BxJ,KAAKqJ,YAAY7C,GAOnBxG,KAAK0E,oBAAoBC,IAE3B0C,UAAWb,GAIT,GAAIxG,KAAKgC,UACPhC,KAAKoB,iBACoB,IAAzBpB,KAAKsJ,eAKL,OAHA9C,EAAEe,iBACFf,EAAEiD,kBAEKzJ,KAAK0I,aAGdZ,EAAcpI,QAAQoE,QAAQuD,UAAUlH,KAAKH,KAAMwG,IAErDf,WAAYtG,GAENa,KAAKkI,cAAgB,EACvBlI,KAAK0J,iBAEL5B,EAAcpI,QAAQoE,QAAQ2B,WAAWtF,KAAKH,KAAMb,GAKlDa,KAAKoB,gBACLpB,KAAKgC,UACLhC,KAAKkB,QAAQ/B,GAAMG,oBAAoB6H,SAASnH,KAAKoB,eAAe9B,uBAEpEU,KAAKoB,eAAiB,QAI5BoG,mBAC4B,MAAtBxH,KAAKyC,eACgB,KAAvBzC,KAAKyC,cAELzC,KAAKQ,cAAgB,GAErBR,KAAKQ,cAAgBR,KAAKgC,SAAWhC,KAAKyC,cAAgB,CAACzC,KAAKyC,gBAGpEiD,SAAUpE,GACR9C,OAAQkB,QAAQoE,QAAQ4B,SAASvF,KAAKH,UAAgB2J,IAAVrI,EAAsBtB,KAAKoB,eAAiBE,IAE1FoI,gBACE,MAAMpI,EAAQtB,KAAKyC,cAAcgG,QAC3BM,EAAQ/I,KAAKQ,cAAc4D,UAAUjF,GACzCa,KAAKkB,QAAQ/B,KAAUa,KAAKoB,gBAI9B,GAAI2H,GAAS,EAAG,CACd,MAAM5J,EAA+B,kBAAjBmC,EAAMyH,GACtBa,OAAOC,OAAO,GAAIvI,EAAMyH,IACxBzH,EAAMyH,GAEVzH,EAAMwI,OAAOf,EAAO,GACpBzH,EAAMyI,KAAK5K,QAEXmC,EAAMtB,KAAKkI,cAAgBlI,KAAKoB,eAGlCpB,KAAK0F,SAASpE,GACdtB,KAAKkI,cAAgB,EACrBlI,KAAKoB,eAAiB,MAExB4I,iBAEE,IAAKhK,KAAK+B,cAAe,OAIrB/B,KAAKoB,iBAAmBpB,KAAKkB,QAAQlB,KAAKyC,gBAAgBzC,KAAK0F,WAGnE,MAAMuE,EAAcnL,QAAQkB,KAAKkK,aAAaC,YAAcnK,KAAKoK,SAC7DH,IAAajK,KAAKoB,eAAiB,OAEzCkC,aACEtD,KAAKgC,SAAWhC,KAAK0I,aAAe1I,KAAKgK,kBAE3CtB,aACE,MAAM2B,EAAYrK,KAAKsJ,eAMvB,GAAKe,EAAY,IAAMrK,KAAK+B,gBACvB/B,KAAKoB,eAAgB,OAE1B,GAAIpB,KAAKkI,cAAgB,EACvB,OAAOlI,KAAK0J,gBAGd,MAAMX,EAAQ/I,KAAKQ,cAAc4D,UAAUjF,GACzCa,KAAKoB,iBAAmBpB,KAAKkB,QAAQ/B,IAIjCmL,EAAevB,GAAS,GAA0C,kBAA9B/I,KAAKQ,cAAcuI,GACzDa,OAAOC,OAAO,GAAI7J,KAAKQ,cAAcuI,IACrC/I,KAAKoB,eAKT,GAAI2H,GAAS,EAAG,CACd,MAAMtG,EAAgBzC,KAAKyC,cAAcgG,QACzChG,EAAcqH,OAAOf,EAAO,GAE5B/I,KAAK0F,SAASjD,GAMhB,GAAI4H,GAAa,EAAG,OAAQrK,KAAKoB,eAAiB,KAElDpB,KAAKyF,WAAW6E,GAEhBtK,KAAKoB,eAAiB,MAExByH,QAASpB,GAAqB,MAC5B,IAAKzH,KAAKgC,UAAYhC,KAAK+B,cAAe,OAE1C,MAAMwI,EAAc,SAAG9C,EAAMG,oBAAT,EAAG4C,EAAqBC,QAAQ,4CAChDF,IAAqE,IAAnDvK,KAAK0K,kBAAkBH,KAC3C9C,EAAMF,iBACN/I,OAAQkB,QAAQoE,QAAQ2B,WAAWtF,KAAKH,KAAMuK,KAGlD5E,oBACE3F,KAAKkI,cAAgB,EAErBJ,EAAcpI,QAAQoE,QAAQ6B,kBAAkBxF,KAAKH,U,oCClR6C,aAAP,IAAsB2K,EAAG,KAAqB5E,EAAM,W,OAAa,EAAK,OAAlB,W,MAAsB,CAAtB,WAAqDA,GAAK,OAAC,W,MAAC,CAAmC,UAA3C,OAAwE,GAAC,M,GAA0B,OAAO,C,MAAjC,CAA+D,iBAAgB6E,gB,MAAeC,EAAIC,GAAG3L,YAArG,GAAzE,CAAsM4L,MAAM,YAACzJ,OAAOuJ,EAAI1L,GAAK6L,aAAjB,U,KAAuDC,SAAS9L,GAAhE,oCAA/N,MAAuVwL,CAAY5E,MAAM,eAAC,SAAO,SAAR,GAAa,EAAK,KAAlB,mDAAqDA,GAAM,U,MAAC,CAAuC,UAA/C,OAAgF,GAAC,M,GAA0B,OAAO,C,MAAjC,CAAmE,iBAAgB6E,oB,MAAeC,EAAIC,GAAG3L,gBAAzG,GAAjF,CAAsN4L,MAAM,YAACzJ,OAAOuJ,EAAI1L,GAAK+L,iBAAjB,U,KAA2DD,SAAS9L,GAApE,wCAA/O,MAAvc,CAAs1B4G,MAAM,mBAAC,SAAO,SAAR,GAAa,EAAK,KAAlB,2DAAmDA,IAAM,uB,MAAC,CAAmC,UAAuC,OAAoC,S,CAAiD,IAAa,CAA7K,MAAP,CAA2LgF,MAAM,yBAACzJ,iBAAgB6J,oBAAaC,eAAS,EAAUC,GAAV,c,MAAoBJ,EAAKJ,GAAI1L,eAA0B,YAA9F,OAA+FmM,aAAW,OAA5T,MAAsVX,CAAY5E,MAAM,mBAAC,SAAO,YAAR,gCAA91C,kCAEIwF,YAAgB,CAEpB,MAASC,C,wFC+CM,GACf9M,qBACA+M,8BACA9M,OACA+M,QACA7M,YACA8M,aAGAC,QACA/M,YACAE,gBAGA8M,eACAhN,YACAE,iBAGA+M,UACA,kCAEAhM,OACA,OACAkL,aACAE,iBACAC,mBAGAlL,aACA,wBACA8L,uCAIA5M,OACA,wCAGA6M,gBACA,WAEA,oCAEAC,gEAEA,GAJA,GAMAC,oBACA,WAEA,wCAEAD,oCACAL,oCAEA,GALA,GAOAO,oBACA,WAEA,wCAEAF,oCACAL,oCAEA,GALA,GAQAQ,aACA,yBAGAtI,YACA,gBACAuI,sDAGAC,aACAnN,MACA6L,WACAE,eACAC,kBCrI6V,I,YCOzVoB,EAAY,eACd,EACA,EACAhB,GACA,EACA,KACA,KACA,MAIa,OAAAgB,E,+GClB6C,MAAU,KAAOC,IAAW,MAAC,G,OAAqC,EAAC,O,YAAS3B,eAAT,WAApB,MAA+C,CAAuB9E,MAAM,Y,CAAoB,SAAO,CAA3B,OAA5E,cAA/C,GAA5D,cAEIwF,Q,KCOW,GACf5M,OACA8N,SACA5N,aACA8M,eCbiV,I,YCO7UY,EAAY,eACd,EACA,EACAhB,GACA,EACA,KACA,KACA,MAIa,OAAAgB,E,+FCEAd,sBACbiB,OACAC,eAAmB,SAEnBlO,OAAO,CACPC,KAAM,SAENkO,UACE,MAAO,CAAEC,KAAM7M,OAGjB8M,cAAc,EAEdnO,MAAO,CACLoO,SAAUjO,QACVkO,eAAgBlO,QAChBmO,SAAUnO,QACVwC,MAAOxC,SAGTgB,KAAM,KAAM,CACVoN,OAAQ,GACRC,SAAU,GACVC,SAAU,KAGZvK,MAAO,CACLuK,SAAU,CACRC,QAAS1L,GACP,MAAMiK,EAAShC,OAAO8B,OAAO/J,GAAKwF,UAAS,GAE3CnH,KAAK4B,MAAM,SAAUgK,IAEvB0B,MAAM,EACNC,WAAW,IAIfzJ,QAAS,CACP0J,WAAYtK,GACV,MAAMuK,EAAWvK,GACRA,EAAMwK,OAAO,WAAa/L,IAC/B3B,KAAKiL,KAAKjL,KAAKoN,SAAUlK,EAAMyK,KAAMhM,IACpC,CAAE4L,WAAW,IAGZJ,EAAqB,CACzBQ,KAAMzK,EAAMyK,KACZC,MAAO,OACPC,eAAgB,QAiBlB,OAdI7N,KAAKgN,eAEPG,EAASU,eAAiB3K,EAAMwK,OAAO,iBAAmB/L,IACnDA,IAGD3B,KAAKoN,SAASU,eAAe5K,EAAMyK,QAEvCR,EAASS,MAAQH,EAAQvK,OAG3BiK,EAASS,MAAQH,EAAQvK,GAGpBiK,GAGTY,WACE,OAAqE,IAA9D/N,KAAKkN,OAAOjO,OAAOiE,IAAUA,EAAM6K,UAAS,IAAOhN,QAG5DiN,QACEhO,KAAKkN,OAAOe,QAAQ/K,GAASA,EAAM8K,SACnChO,KAAKkO,iBAEPA,gBACMlO,KAAKgN,gBAEPmB,WAAW,KACTnO,KAAKoN,SAAW,IACf,IAIPgB,kBACEpO,KAAKkN,OAAOe,QAAQ/K,GAASA,EAAMkL,mBACnCpO,KAAKkO,iBAEPG,SAAUnL,GACRlD,KAAKkN,OAAOnD,KAAK7G,GACjBlD,KAAKmN,SAASpD,KAAK/J,KAAKwN,WAAWtK,KAErCoL,WAAYpL,GACV,MAAMqL,EAAQvO,KAAKkN,OAAO5K,KAAKC,GAAKA,EAAEoL,OAASzK,EAAMyK,MAErD,IAAKY,EAAO,OAEZ,MAAMC,EAAUxO,KAAKmN,SAAS7K,KAAKC,GAAKA,EAAEoL,OAASY,EAAMZ,MACrDa,IACFA,EAAQZ,QACRY,EAAQX,kBAGV7N,KAAKmN,SAAWnN,KAAKmN,SAASlO,OAAOsD,GAAKA,EAAEoL,OAASY,EAAMZ,MAC3D3N,KAAKkN,OAASlN,KAAKkN,OAAOjO,OAAOsD,GAAKA,EAAEoL,OAASY,EAAMZ,MACvD3N,KAAKyO,QAAQzO,KAAKoN,SAAUmB,EAAMZ,QAItCnC,OAAQkD,GACN,OAAOA,EAAE,OAAQ,CACflC,YAAa,SACbzG,MAAO,CACL4I,YAAY,KACT3O,KAAK4O,QAEVjG,GAAI,CACFkG,OAASrI,GAAaxG,KAAK4B,MAAM,SAAU4E,KAE5CxG,KAAKqI,OAAOtJ,a,0GCtInB,MAAM+P,EAAc,CAAC,KAAM,KAAM,KAAM,MAEjCC,EAAkB,KACfD,EAAYE,OAAO,CAACrQ,EAAOgD,KAChChD,EAAMgD,GAAO,CACX9C,KAAM,CAACC,QAASe,OAAQoP,QACxBlQ,SAAS,GAEJJ,GACN,IAPmB,GAUlBuQ,EAAc,KACXJ,EAAYE,OAAO,CAACrQ,EAAOgD,KAChChD,EAAM,SAAWwQ,eAAWxN,IAAQ,CAClC9C,KAAM,CAACgB,OAAQoP,QACflQ,QAAS,MAEJJ,GACN,IAPe,GAUdyQ,EAAa,KACVN,EAAYE,OAAO,CAACrQ,EAAOgD,KAChChD,EAAM,QAAUwQ,eAAWxN,IAAQ,CACjC9C,KAAM,CAACgB,OAAQoP,QACflQ,QAAS,MAEJJ,GACN,IAPc,GAUb0Q,EAAU,CACdC,IAAK1F,OAAO2F,KAAKR,GACjBS,OAAQ5F,OAAO2F,KAAKL,GACpBO,MAAO7F,OAAO2F,KAAKH,IAGrB,SAASM,EAAiB7Q,EAA4B8Q,EAAchO,GAClE,IAAIiO,EAAY/Q,EAChB,GAAW,MAAP8C,IAAuB,IAARA,EAAnB,CAGA,GAAIgO,EAAM,CACR,MAAME,EAAaF,EAAKG,QAAQjR,EAAM,IACtC+Q,GAAa,IAAIC,EAKnB,MAAa,QAAThR,GAA2B,KAAR8C,IAAsB,IAARA,GAKrCiO,GAAa,IAAIjO,EACViO,EAAUG,eAJRH,EAAUG,eAOrB,MAAMC,EAAQ,IAAIC,IAEHC,cAAIzR,OAAO,CACxBC,KAAM,QACNyR,YAAY,EACZxR,MAAO,CACLyR,KAAM,CACJvR,KAAM,CAACC,QAASe,OAAQoP,QACxBlQ,SAAS,MAERgQ,EACHS,OAAQ,CACN3Q,KAAM,CAACgB,OAAQoP,QACflQ,QAAS,SAERmQ,EACHO,MAAO,CACL5Q,KAAM,CAACgB,OAAQoP,QACflQ,QAAS,SAERqQ,EACHiB,UAAW,CACTxR,KAAMgB,OACNd,QAAS,KACTuR,UAAYC,GAAa,CAAC,OAAQ,QAAS,MAAO,SAAU,WAAY,WAAWpJ,SAASoJ,IAE9FC,IAAK,CACH3R,KAAMgB,OACNd,QAAS,QAGbyM,OAAQkD,GAAG,MAAE/P,EAAF,KAASmB,EAAT,SAAe2Q,EAAf,OAAyBC,IAElC,IAAIC,EAAW,GACf,IAAK,MAAMhB,KAAQhR,EACjBgS,GAAY9Q,OAAQlB,EAAcgR,IAEpC,IAAIiB,EAAYZ,EAAMvO,IAAIkP,GAE1B,IAAKC,EAAW,CAGd,IAAI/R,EACJ,IAAKA,KAHL+R,EAAY,GAGCvB,EACXA,EAAQxQ,GAAMoP,QAAQ0B,IACpB,MAAMrO,EAAoC3C,EAAcgR,GAClDC,EAAYF,EAAgB7Q,EAAM8Q,EAAMrO,GAC1CsO,GAAWgB,EAAW7G,KAAK6F,KAInC,MAAMiB,EAAgBD,EAAU/P,KAAK+O,GAAaA,EAAUkB,WAAW,SAEvEF,EAAU7G,KAAK,CAEbuF,KAAMuB,IAAkBlS,EAAMyR,KAC9B,CAAC,OAAOzR,EAAMyR,MAASzR,EAAMyR,KAC7B,CAAC,UAAUzR,EAAM6Q,QAAW7Q,EAAM6Q,OAClC,CAAC,SAAS7Q,EAAM8Q,OAAU9Q,EAAM8Q,MAChC,CAAC,cAAc9Q,EAAM0R,WAAc1R,EAAM0R,YAG3CL,EAAMtO,IAAIiP,EAAUC,GAGtB,OAAOlC,EAAE/P,EAAM6R,IAAK1K,eAAUhG,EAAM,CAAEiR,MAAOH,IAAcH","file":"js/chunk-65cd2d2f.eb612007.js","sourcesContent":["// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex]\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem))\n        } else {\n          this.setMenuIndex(-1)\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex)\n      }\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0)\n          this.$emit('update:list-index', this.$refs.menu.listIndex)\n        }\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      if (!this.multiple && value === '') this.deleteCurrentItem()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n\n        // if selected item contains search value,\n        // remove the search string\n        if (\n          this.internalSearch &&\n          this.multiple &&\n          this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())\n        ) {\n          this.internalSearch = null\n        }\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value === undefined ? this.internalSearch : value)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      const index = this.selectedItems.findIndex(item =>\n        this.getText(item) === this.internalSearch)\n\n      // If user enters a duplicate text on chip edit,\n      // don't add it, move it to the end of the list\n      if (index > -1) {\n        const item = typeof value[index] === 'object'\n          ? Object.assign({}, value[index])\n          : value[index]\n\n        value.splice(index, 1)\n        value.push(item)\n      } else {\n        value[this.editingIndex] = this.internalSearch\n      }\n\n      this.setValue(value)\n      this.editingIndex = -1\n      this.internalSearch = null\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = null\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n      if ((menuIndex < 0 && !this.searchIsDirty) ||\n          !this.internalSearch) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.findIndex(item =>\n        this.internalSearch === this.getText(item))\n\n      // If the duplicate item is an object,\n      // copy it, so that it can be added again later\n      const itemToSelect = index > -1 && typeof this.selectedItems[index] === 'object'\n        ? Object.assign({}, this.selectedItems[index])\n        : this.internalSearch\n\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(itemToSelect)\n\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n    clearableCallback () {\n      this.editingIndex = -1\n\n      VAutocomplete.options.methods.clearableCallback.call(this)\n    },\n  },\n})\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-form',[_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\",\"md\":\"6\"}},[_c('v-text-field',{attrs:{\"error-messages\":_vm.subjectErrors,\"label\":_vm.$t('subject')},on:{\"input\":function($event){return _vm.$v.item.subject.$touch()},\"blur\":function($event){return _vm.$v.item.subject.$touch()}},model:{value:(_vm.item.subject),callback:function ($$v) {_vm.$set(_vm.item, \"subject\", $$v)},expression:\"item.subject\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\",\"md\":\"6\"}},[_c('v-text-field',{attrs:{\"error-messages\":_vm.descriptionErrors,\"label\":_vm.$t('description')},on:{\"input\":function($event){return _vm.$v.item.description.$touch()},\"blur\":function($event){return _vm.$v.item.description.$touch()}},model:{value:(_vm.item.description),callback:function ($$v) {_vm.$set(_vm.item, \"description\", $$v)},expression:\"item.description\"}})],1)],1),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\",\"md\":\"6\"}},[_c('v-combobox',{attrs:{\"items\":_vm.orderRepairSelectItems,\"error-messages\":_vm.orderRepairErrors,\"no-data-text\":_vm.$t('No results'),\"label\":_vm.$t('orderRepair'),\"item-text\":\"name\",\"item-value\":\"@id\"},model:{value:(_vm.item.orderRepair),callback:function ($$v) {_vm.$set(_vm.item, \"orderRepair\", $$v)},expression:\"item.orderRepair\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}})],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-form>\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\" sm=\"6\" md=\"6\">\n          <v-text-field\n            v-model=\"item.subject\"\n            :error-messages=\"subjectErrors\"\n            :label=\"$t('subject')\"\n            @input=\"$v.item.subject.$touch()\"\n            @blur=\"$v.item.subject.$touch()\"\n          />\n        </v-col>\n\n        <v-col cols=\"12\" sm=\"6\" md=\"6\">\n          <v-text-field\n            v-model=\"item.description\"\n            :error-messages=\"descriptionErrors\"\n            :label=\"$t('description')\"\n            @input=\"$v.item.description.$touch()\"\n            @blur=\"$v.item.description.$touch()\"\n          />\n        </v-col>\n      </v-row>\n\n      <v-row>\n        <v-col cols=\"12\" sm=\"6\" md=\"6\">\n          <v-combobox\n            v-model=\"item.orderRepair\"\n            :items=\"orderRepairSelectItems\"\n            :error-messages=\"orderRepairErrors\"\n            :no-data-text=\"$t('No results')\"\n            :label=\"$t('orderRepair')\"\n            item-text=\"name\"\n            item-value=\"@id\"\n          />\n        </v-col>\n\n        <v-col cols=\"12\"></v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script>\nimport has from \"lodash/has\";\nimport { validationMixin } from \"vuelidate\";\nimport { required } from \"vuelidate/lib/validators\";\nimport { mapActions } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\";\n\nexport default {\n  name: \"ComplaintForm\",\n  mixins: [validationMixin],\n  props: {\n    values: {\n      type: Object,\n      required: true,\n    },\n\n    errors: {\n      type: Object,\n      default: () => {},\n    },\n\n    initialValues: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  mounted() {\n    this.orderRepairGetSelectItems();\n  },\n  data() {\n    return {\n      subject: null,\n      description: null,\n      orderRepair: null,\n    };\n  },\n  computed: {\n    ...mapFields(\"order\", {\n      orderRepairSelectItems: \"selectItems\",\n    }),\n\n    // eslint-disable-next-line\n    item() {\n      return this.initialValues || this.values;\n    },\n\n    subjectErrors() {\n      const errors = [];\n\n      if (!this.$v.item.subject.$dirty) return errors;\n\n      has(this.violations, \"subject\") && errors.push(this.violations.subject);\n\n      return errors;\n    },\n    descriptionErrors() {\n      const errors = [];\n\n      if (!this.$v.item.description.$dirty) return errors;\n\n      has(this.violations, \"description\") &&\n        errors.push(this.violations.description);\n\n      return errors;\n    },\n    orderRepairErrors() {\n      const errors = [];\n\n      if (!this.$v.item.orderRepair.$dirty) return errors;\n\n      has(this.violations, \"orderRepair\") &&\n        errors.push(this.violations.orderRepair);\n\n      return errors;\n    },\n\n    violations() {\n      return this.errors || {};\n    },\n  },\n  methods: {\n    ...mapActions({\n      orderRepairGetSelectItems: \"order/fetchSelectItems\",\n    }),\n  },\n  validations: {\n    item: {\n      subject: {},\n      description: {},\n      orderRepair: {},\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=4faabc8b&\"\nimport script from \"./Form.vue?vue&type=script&lang=js&\"\nexport * from \"./Form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"text-center\"},[_c('v-overlay',{attrs:{\"value\":_vm.visible}},[_c('v-progress-circular',{attrs:{\"indeterminate\":\"\",\"size\":\"64\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"text-center\">\n    <v-overlay :value=\"visible\">\n      <v-progress-circular indeterminate size=\"64\"></v-progress-circular>\n    </v-overlay>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    }\n  }\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Loading.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Loading.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Loading.vue?vue&type=template&id=c92419e6&\"\nimport script from \"./Loading.vue?vue&type=script&lang=js&\"\nexport * from \"./Loading.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n"],"sourceRoot":""}